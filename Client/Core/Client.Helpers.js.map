{"version":3,"file":"Client.Helpers.js","sourceRoot":"","sources":["Client.Helpers.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiBA,MAAM,UAAU,KAAK,CAAC,EAAU;IAC5B,OAAO,IAAI,OAAO,CAAC,UAAA,OAAO,IAAI,OAAA,UAAU,CAAC,OAAO,EAAE,EAAE,CAAC,EAAvB,CAAuB,CAAC,CAAC;AAC3D,CAAC;AAED,MAAM,UAAgB,cAAc;;;;;oBAI5B,OAAO,CAAC,GAAG,CAAC,mDAAmD,CAAC,CAAC;oBACjE,WAAM,KAAK,CAAC,GAAG,CAAC,EAAA;;oBAAhB,SAAgB,CAAC;;;wBACb,UAAU,CAAC,iBAAiB,IAAI,SAAS;;wBACjD,WAAO,IAAI,EAAC;;;;CACf;AAED,MAAM,UAAgB,iBAAiB;;;;wBAEnC,WAAM,cAAc,EAAE,EAAA;;oBAAtB,SAAsB,CAAC;;;oBAGnB,OAAO,CAAC,GAAG,CAAC,4CAA4C,CAAC,CAAC;oBAC1D,WAAM,KAAK,CAAC,GAAG,CAAC,EAAA;;oBAAhB,SAAgB,CAAC;;;wBACb,UAAU,CAAC,iBAAiB,CAAC,eAAe,IAAI,KAAK;;wBAC7D,WAAO,IAAI,EAAC;;;;CACf;AAED;IAA8C,4CAAK;IAM/C,kCAAY,aAAmC;QAA/C,YACI,kBAAM,aAAa,CAAC,OAAO,CAAC,SAO/B;QAbQ,UAAI,GAAW,0BAA0B,CAAA;QAO9C,KAAI,CAAC,aAAa,GAAG,aAAa,CAAA;QAClC,KAAI,CAAC,OAAO,GAAG,KAAI,CAAC,aAAa,CAAC,OAAO,CAAA;QAEzC,OAAO,CAAC,KAAK,CAAC,aAAa,CAAC,OAAO,CAAC,CAAA;QAEpC,MAAM,CAAC,cAAc,CAAC,KAAI,EAAE,wBAAwB,CAAC,SAAS,CAAC,CAAC;;IACpE,CAAC;IACL,+BAAC;AAAD,CAAC,AAfD,CAA8C,KAAK,GAelD;;AAED;IAMI;QAEI,IAAI,QAAQ,GAAG,IAAI,KAAK,EAAE,CAAA;QAC1B,IAAG,QAAQ;YACX,IAAG,QAAQ,CAAC,KAAK,EACjB;gBACI,IAAI,SAAS,GAAG,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC9C,IAAI,WAAW,GAAG,SAAS,CAAC,KAAK,CAAC,SAAS,CAAC,WAAW,CAAC,GAAG,CAAC,EAAC,SAAS,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAA;gBACxF,IAAK,WAAW,CAAC,MAAM,IAAI,CAAC,EAAG;oBAC3B,WAAW,GAAG,SAAS,CAAC,KAAK,CAAC,SAAS,CAAC,WAAW,CAAC,GAAG,CAAC,EAAC,SAAS,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAA;iBACvF;gBACD,IAAI,aAAa,GAAG,WAAW,CAAC,KAAK,CAAC,CAAC,GAAC,CAAC,EAAC,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;gBACpE,IAAI,OAAO,GAAG,WAAW,CAAC,KAAK,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,GAAC,CAAC,EAAC,WAAW,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;gBACzF,IAAI,QAAQ,GAAG,WAAW,CAAC,KAAK,CAAC,WAAW,CAAC,WAAW,CAAC,GAAG,CAAC,GAAC,CAAC,CAAC,CAAC;gBAEjE,IAAI,CAAC,QAAQ,GAAG,aAAa,CAAA;gBAC7B,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,OAAO,CAAC,CAAA;gBACjC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAA;aACvC;IACL,CAAC;IAEM,2BAAQ,GAAf;QAEI,OAAO,IAAI,CAAC,QAAQ,GAAG,GAAG,GAAG,IAAI,CAAC,UAAU,GAAG,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC;IAC3E,CAAC;IACL,eAAC;AAAD,CAAC,AA/BD,IA+BC;;AAED,SAAS,qBAAqB,CAAC,kBAA0B;IACrD,IAAM,QAAQ,GAAG,MAAI,yBAAyB,CAAC,kBAAkB,CAAC,MAAG,CAAC;IACtE,OAAO,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;AAC5C,CAAC;AAED,SAAS,yBAAyB,CAAC,kBAA0B;IACzD,OAAO,SAAO,kBAAoB,CAAC;AACvC,CAAC;AAED,MAAM,UAAU,iBAAiB,CAAC,cAAmB;IAEjD,IAAI,aAAa,GAAG,cAAc,CAAC;IAEnC,IAAI,QAAQ,GAAG,UAAC,IAAY,EAAE,KAAqB;QAC/C,IAAI,MAAM,GAAG,cAAc,CAAC;QAC5B,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC5B,IAAI,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC;QACvB,KAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,GAAC,CAAC,EAAE,CAAC,EAAE,EAAE;YAC3B,IAAI,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;gBAAG,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,CAAA;YACrC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;SACzB;QAED,MAAM,CAAC,KAAK,CAAC,GAAG,GAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;IACjC,CAAC,CAAC;IAEF,IAAI,aAAa,GAAG,UAAC,GAAQ,EAAE,KAA2B;QAA3B,sBAAA,EAAA,YAA2B;QACtD,KAAK,IAAI,QAAQ,IAAI,GAAG,EAAE;YACtB,IAAI,GAAG,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE;gBAC9B,IAAI,OAAO,GAAG,CAAC,QAAQ,CAAC,IAAI,QAAQ,EAAE;oBAClC,IAAG,KAAK,KAAK,IAAI;wBAAE,KAAK,GAAG,QAAQ,CAAA;;wBAC9B,KAAK,GAAG,KAAK,GAAG,GAAG,GAAG,QAAQ,CAAA;oBACnC,aAAa,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAG,KAAK,CAAC,CAAC;iBACxC;qBAAM;oBACH,IAAG,CAAC,QAAQ,KAAK,aAAa,CAAC,IAAI,OAAO,GAAG,CAAC,QAAQ,CAAC,KAAK,QAAQ,EACpE;wBACI,IAAG,KAAK,KAAK,IAAI;4BACb,QAAQ,CAAC,KAAK,EAAE,qBAAqB,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;qBAC5D;iBACJ;aACJ;SACJ;IACL,CAAC,CAAC;IAIF,aAAa,CAAC,cAAc,CAAC,CAAC;IAC9B,OAAO,cAAc,CAAC;AAC1B,CAAC","sourcesContent":["import * as OriWeb from \"./Client.ImportExportcontroller\";\r\n\r\nexport interface IInvalidPropertyInfo\r\n{\r\n    message: string\r\n\r\n    buildingBlockID: string\r\n    fileName: string\r\n    lineNumber: string\r\n    \r\n    validAPIValues: string[]\r\n    validationRegex: string\r\n    exclusionRegex: string\r\n    validStrings: string[]\r\n    exclusionStrings: string[]\r\n}\r\n\r\nexport function Sleep(ms: number) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\nexport async function WaitForSession()\r\n{\r\n    do\r\n    {\r\n        console.log(\"Waiting for OriClientSession to be established...\");\r\n        await Sleep(500);\r\n    } while(globalThis.CurrentOriSession == undefined);\r\n    return true;\r\n}\r\n\r\nexport async function WaitForConnection()\r\n{\r\n    await WaitForSession();\r\n    do\r\n    {\r\n        console.log(\"Waiting for OriClientSession to Connect...\");\r\n        await Sleep(500);\r\n    } while(globalThis.CurrentOriSession.CheckConnection == false);\r\n    return true;\r\n}\r\n\r\nexport class InvalidPropertyException extends Error {\r\n    readonly name: string = \"InvalidPropertyException\"\r\n    message: string;\r\n\r\n    exceptionInfo: IInvalidPropertyInfo\r\n\r\n    constructor(exceptionInfo: IInvalidPropertyInfo) {\r\n        super(exceptionInfo.message);\r\n        this.exceptionInfo = exceptionInfo\r\n        this.message = this.exceptionInfo.message\r\n        \r\n        console.error(exceptionInfo.message)\r\n        // Set the prototype explicitly.\r\n        Object.setPrototypeOf(this, InvalidPropertyException.prototype);\r\n    }\r\n}\r\n\r\nexport class LineInfo\r\n{\r\n    fileName: string;\r\n    lineNumber: number;\r\n    columnNumber: number;\r\n\r\n    constructor()\r\n    {\r\n        let newError = new Error()\r\n        if(newError)\r\n        if(newError.stack)\r\n        {\r\n            let stackLine = newError.stack.split(\"\\n\")[2];\r\n            let caller_line = stackLine.slice(stackLine.lastIndexOf('/'),stackLine.lastIndexOf(')'))\r\n            if ( caller_line.length == 0 ) {\r\n                caller_line = stackLine.slice(stackLine.lastIndexOf('('),stackLine.lastIndexOf(')'))\r\n            }\r\n            let filename_base = caller_line.slice(0+1,caller_line.indexOf(':'));\r\n            let line_no = caller_line.slice(caller_line.indexOf(':')+1,caller_line.lastIndexOf(':'));\r\n            let line_pos = caller_line.slice(caller_line.lastIndexOf(':')+1);\r\n            \r\n            this.fileName = filename_base\r\n            this.lineNumber = Number(line_no)\r\n            this.columnNumber = Number(line_pos)\r\n        }\r\n    }\r\n\r\n    public toString()\r\n    {\r\n        return this.fileName + \" \" + this.lineNumber + \" \" + this.columnNumber;\r\n    }\r\n}\r\n\r\nfunction getElementByCaptureId(referenceCaptureId: string) {\r\n    const selector = `[${getCaptureIdAttributeName(referenceCaptureId)}]`;\r\n    return document.querySelector(selector);\r\n}\r\n\r\nfunction getCaptureIdAttributeName(referenceCaptureId: string) {\r\n    return `_bl_${referenceCaptureId}`;\r\n}\r\n\r\nexport function BlazorIDToElement(incomingObject: any): any\r\n{\r\n    let elementRefKey = '__internalId';\r\n\r\n    let setValue = (path: string, value: Element | null) => {\r\n        var schema = incomingObject;\r\n        var pList = path.split('.');\r\n        var len = pList.length;\r\n        for(var i = 0; i < len-1; i++) {\r\n            var elem = pList[i];\r\n            if( !schema[elem] ) schema[elem] = {}\r\n            schema = schema[elem];\r\n        }\r\n\r\n        schema[pList[len-1]] = value;\r\n    };\r\n\r\n    let iterateObject = (obj: any, stack: string | null = null): any => {\r\n        for (var property in obj) {\r\n            if (obj.hasOwnProperty(property)) {\r\n                if (typeof obj[property] == \"object\") {\r\n                    if(stack === null) stack = property\r\n                    else stack = stack + \".\" + property\r\n                    iterateObject(obj[property],  stack);\r\n                } else {\r\n                    if((property === elementRefKey) && typeof obj[property] === 'string')\r\n                    {\r\n                        if(stack !== null)\r\n                            setValue(stack, getElementByCaptureId(obj[property]))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    \r\n\r\n    iterateObject(incomingObject);\r\n    return incomingObject;\r\n}"]}